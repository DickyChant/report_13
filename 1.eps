%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 772 591
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Users\Dicky\Desktop\report_13\1.eps)
%%CreationDate: Fri Dec 29 20:15:17 2017
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 45/s45 put
Encoding 46/s46 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 51/s51 put
Encoding 52/s52 put
Encoding 54/s54 put
Encoding 56/s56 put
Encoding 72/s72 put
Encoding 102/s102 put
Encoding 107/s107 put
Encoding 122/s122 put
/BoundingBoxes 17 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s45 [0 -434 682 1854] def
/s46 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s51 [0 -434 1139 1854] def
/s52 [0 -434 1139 1854] def
/s54 [0 -434 1139 1854] def
/s56 [0 -434 1139 1854] def
/s72 [0 -434 1479 1854] def
/s102 [0 -434 569 1854] def
/s107 [0 -434 1024 1854] def
/s122 [0 -434 1024 1854] def
end
/Metrics 17 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s45 682 def
/s46 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s51 1139 def
/s52 1139 def
/s54 1139 def
/s56 1139 def
/s72 1479 def
/s102 569 def
/s107 1024 def
/s122 1024 def
end
/CharProcs 17 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s46 {
186 0 m
186 205 186 0 186 205 c
391 205 186 205 391 205 c
391 0 391 205 391 0 c
186 0 391 0 186 0 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s51 {
86 387 m
266 411 86 387 266 411 c
286.67 309 321.83 235.5 371.5 190.5 c
421.17 145.5 481.67 123 553 123 c
637.67 123 709.17 152.33 767.5 211 c
825.83 269.67 855 342.33 855 429 c
855 511.67 828 579.83 774 633.5 c
720 687.17 651.33 714 568 714 c
534 714 491.67 707.33 441 694 c
461 852 441 694 461 852 c
473 850.67 482.67 850 490 850 c
566.67 850 635.67 870 697 910 c
758.33 950 789 1011.67 789 1095 c
789 1161 766.67 1215.67 722 1259 c
677.33 1302.33 619.67 1324 549 1324 c
479 1324 420.67 1302 374 1258 c
327.33 1214 297.33 1148 284 1060 c
104 1092 284 1060 104 1092 c
126 1212.67 176 1306.17 254 1372.5 c
332 1438.83 429 1472 545 1472 c
625 1472 698.67 1454.83 766 1420.5 c
833.33 1386.17 884.83 1339.33 920.5 1280 c
956.17 1220.67 974 1157.67 974 1091 c
974 1027.67 957 970 923 918 c
889 866 838.67 824.67 772 794 c
858.67 774 926 732.5 974 669.5 c
1022 606.5 1046 527.67 1046 433 c
1046 305 999.33 196.5 906 107.5 c
812.67 18.5 694.67 -26 552 -26 c
423.33 -26 316.5 12.33 231.5 89 c
146.5 165.67 98 265 86 387 c
closepath } bind def
/s52 {
662 0 m
662 351 662 0 662 351 c
26 351 662 351 26 351 c
26 516 26 351 26 516 c
695 1466 26 516 695 1466 c
842 1466 695 1466 842 1466 c
842 516 842 1466 842 516 c
1040 516 842 516 1040 516 c
1040 351 1040 516 1040 351 c
842 351 1040 351 842 351 c
842 0 842 351 842 0 c
662 0 842 0 662 0 c
closepath 662 516 m
662 1177 662 516 662 1177 c
203 516 662 1177 203 516 c
662 516 203 516 662 516 c
closepath } bind def
/s54 {
1019 1107 m
840 1093 1019 1107 840 1093 c
824 1163.67 801.33 1215 772 1247 c
723.33 1298.33 663.33 1324 592 1324 c
534.67 1324 484.33 1308 441 1276 c
384.33 1234.67 339.67 1174.33 307 1095 c
274.33 1015.67 257.33 902.67 256 756 c
299.33 822 352.33 871 415 903 c
477.67 935 543.33 951 612 951 c
732 951 834.17 906.83 918.5 818.5 c
1002.83 730.17 1045 616 1045 476 c
1045 384 1025.17 298.5 985.5 219.5 c
945.83 140.5 891.33 80 822 38 c
752.67 -4 674 -25 586 -25 c
436 -25 313.67 30.17 219 140.5 c
124.33 250.83 77 432.67 77 686 c
77 969.33 129.33 1175.33 234 1304 c
325.33 1416 448.33 1472 603 1472 c
718.33 1472 812.83 1439.67 886.5 1375 c
960.17 1310.33 1004.33 1221 1019 1107 c
closepath 284 475 m
284 413 297.17 353.67 323.5 297 c
349.83 240.33 386.67 197.17 434 167.5 c
481.33 137.83 531 123 583 123 c
659 123 724.33 153.67 779 215 c
833.67 276.33 861 359.67 861 465 c
861 566.33 834 646.17 780 704.5 c
726 762.83 658 792 576 792 c
494.67 792 425.67 762.83 369 704.5 c
312.33 646.17 284 569.67 284 475 c
closepath } bind def
/s56 {
362 795 m
287.33 822.33 232 861.33 196 912 c
160 962.67 142 1023.33 142 1094 c
142 1200.67 180.33 1290.33 257 1363 c
333.67 1435.67 435.67 1472 563 1472 c
691 1472 794 1434.83 872 1360.5 c
950 1286.17 989 1195.67 989 1089 c
989 1021 971.17 961.83 935.5 911.5 c
899.83 861.17 845.67 822.33 773 795 c
863 765.67 931.5 718.33 978.5 653 c
1025.5 587.67 1049 509.67 1049 419 c
1049 293.67 1004.67 188.33 916 103 c
827.33 17.67 710.67 -25 566 -25 c
421.33 -25 304.67 17.83 216 103.5 c
127.33 189.17 83 296 83 424 c
83 519.33 107.17 599.17 155.5 663.5 c
203.83 727.83 272.67 771.67 362 795 c
closepath 326 1100 m
326 1030.67 348.33 974 393 930 c
437.67 886 495.67 864 567 864 c
636.33 864 693.17 885.83 737.5 929.5 c
781.83 973.17 804 1026.67 804 1090 c
804 1156 781.17 1211.5 735.5 1256.5 c
689.83 1301.5 633 1324 565 1324 c
496.33 1324 439.33 1302 394 1258 c
348.67 1214 326 1161.33 326 1100 c
closepath 268 423 m
268 371.67 280.17 322 304.5 274 c
328.83 226 365 188.83 413 162.5 c
461 136.17 512.67 123 568 123 c
654 123 725 150.67 781 206 c
837 261.33 865 331.67 865 417 c
865 503.67 836.17 575.33 778.5 632 c
720.83 688.67 648.67 717 562 717 c
477.33 717 407.17 689 351.5 633 c
295.83 577 268 507 268 423 c
closepath } bind def
/s72 {
164 0 m
164 1466 164 0 164 1466 c
358 1466 164 1466 358 1466 c
358 864 358 1466 358 864 c
1120 864 358 864 1120 864 c
1120 1466 1120 864 1120 1466 c
1314 1466 1120 1466 1314 1466 c
1314 0 1314 1466 1314 0 c
1120 0 1314 0 1120 0 c
1120 691 1120 0 1120 691 c
358 691 1120 691 358 691 c
358 0 358 691 358 0 c
164 0 358 0 164 0 c
closepath } bind def
/s102 {
178 0 m
178 922 178 0 178 922 c
19 922 178 922 19 922 c
19 1062 19 922 19 1062 c
178 1062 19 1062 178 1062 c
178 1175 178 1062 178 1175 c
178 1246.33 184.33 1299.33 197 1334 c
214.33 1380.67 244.83 1418.5 288.5 1447.5 c
332.17 1476.5 393.33 1491 472 1491 c
522.67 1491 578.67 1485 640 1473 c
613 1316 640 1473 613 1316 c
575.67 1322.67 540.33 1326 507 1326 c
452.33 1326 413.67 1314.33 391 1291 c
368.33 1267.67 357 1224 357 1160 c
357 1062 357 1160 357 1062 c
564 1062 357 1062 564 1062 c
564 922 564 1062 564 922 c
357 922 564 922 357 922 c
357 0 357 922 357 0 c
178 0 357 0 178 0 c
closepath } bind def
/s107 {
136 0 m
136 1466 136 0 136 1466 c
316 1466 136 1466 316 1466 c
316 630 316 1466 316 630 c
742 1062 316 630 742 1062 c
975 1062 742 1062 975 1062 c
569 668 975 1062 569 668 c
1016 0 569 668 1016 0 c
794 0 1016 0 794 0 c
443 543 794 0 443 543 c
316 421 443 543 316 421 c
316 0 316 421 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s122 {
40 0 m
40 146 40 0 40 146 c
716 922 40 146 716 922 c
639.33 918 571.67 916 513 916 c
80 916 513 916 80 916 c
80 1062 80 916 80 1062 c
948 1062 80 1062 948 1062 c
948 943 948 1062 948 943 c
373 269 948 943 373 269 c
262 146 373 269 262 146 c
342.67 152 418.33 155 489 155 c
980 155 489 155 980 155 c
980 0 980 155 980 0 c
40 0 980 0 40 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Symbol
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -223.00 def
/UnderlineThickness 100.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Symbol def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1 -450 2279 2059] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
/BoundingBoxes 3 dict def
BoundingBoxes begin
/s32 [0 -450 512 2059] def
/s61542 [0 -450 0 2059] def
end
/Metrics 3 dict def
 Metrics begin
/s32 512 def
/s61542 0 def
end
/CharProcs 3 dict def
CharProcs begin
/.notdef {} def
/s61542 {
590 943 m
722.67 928.33 823.83 876 893.5 786 c
963.17 696 998 588.33 998 463 c
998 405.67 989.67 350.17 973 296.5 c
956.33 242.83 934.5 195.83 907.5 155.5 c
880.5 115.17 850.33 81.83 817 55.5 c
783.67 29.17 747 9 707 -5 c
679 -14.33 640 -22 590 -28 c
590 -442 590 -28 590 -442 c
478 -442 590 -442 478 -442 c
478 -28 478 -442 478 -28 c
377.33 -18 296 13.67 234 67 c
125.33 159.67 71 288.67 71 454 c
71 519.33 79.33 578 96 630 c
112.67 682 135.17 727.67 163.5 767 c
191.83 806.33 222.83 838.5 256.5 863.5 c
290.17 888.5 326 907.33 364 920 c
391.33 929.33 429.33 937 478 943 c
478 1422 478 943 478 1422 c
590 1422 478 1422 590 1422 c
590 943 590 1422 590 943 c
closepath 478 882 m
434 871.33 400.33 856.67 377 838 c
339 808 308.5 765.17 285.5 709.5 c
262.5 653.83 251 578.33 251 483 c
251 377.67 264.5 291.5 291.5 224.5 c
318.5 157.5 352 107 392 73 c
410.67 56.33 439.33 42.33 478 31 c
478 882 478 31 478 882 c
closepath 590 31 m
630.67 40.33 662.33 53.67 685 71 c
726.33 103 758.33 147.33 781 204 c
803.67 260.67 815 339.67 815 441 c
815 533.67 804.67 612.17 784 676.5 c
763.33 740.83 734.67 790.33 698 825 c
674 847.67 638 866.67 590 882 c
590 31 590 882 590 31 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Symbol exch definefont pop
%%EndFont
%%BeginFont: /MC3_Symbol
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -223.00 def
/UnderlineThickness 100.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_Symbol def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1 -450 2279 2059] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
/BoundingBoxes 3 dict def
BoundingBoxes begin
/s32 [0 -450 512 2059] def
/s61542 [0 -450 0 2059] def
end
/Metrics 3 dict def
 Metrics begin
/s32 512 def
/s61542 0 def
end
/CharProcs 3 dict def
CharProcs begin
/.notdef {} def
/s61542 {
590 943 m
722.67 928.33 823.83 876 893.5 786 c
963.17 696 998 588.33 998 463 c
998 405.67 989.67 350.17 973 296.5 c
956.33 242.83 934.5 195.83 907.5 155.5 c
880.5 115.17 850.33 81.83 817 55.5 c
783.67 29.17 747 9 707 -5 c
679 -14.33 640 -22 590 -28 c
590 -442 590 -28 590 -442 c
478 -442 590 -442 478 -442 c
478 -28 478 -442 478 -28 c
377.33 -18 296 13.67 234 67 c
125.33 159.67 71 288.67 71 454 c
71 519.33 79.33 578 96 630 c
112.67 682 135.17 727.67 163.5 767 c
191.83 806.33 222.83 838.5 256.5 863.5 c
290.17 888.5 326 907.33 364 920 c
391.33 929.33 429.33 937 478 943 c
478 1422 478 943 478 1422 c
590 1422 478 1422 590 1422 c
590 943 590 1422 590 943 c
closepath 478 882 m
434 871.33 400.33 856.67 377 838 c
339 808 308.5 765.17 285.5 709.5 c
262.5 653.83 251 578.33 251 483 c
251 377.67 264.5 291.5 291.5 224.5 c
318.5 157.5 352 107 392 73 c
410.67 56.33 439.33 42.33 478 31 c
478 882 478 31 478 882 c
closepath 590 31 m
630.67 40.33 662.33 53.67 685 71 c
726.33 103 758.33 147.33 781 204 c
803.67 260.67 815 339.67 815 441 c
815 533.67 804.67 612.17 784 676.5 c
763.33 740.83 734.67 790.33 698 825 c
674 847.67 638 866.67 590 882 c
590 31 590 882 590 31 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_Symbol exch definefont pop
%%EndFont
%%BeginFont: /MC4_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC4_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 176/s176 put
/BoundingBoxes 5 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s176 [0 -434 1536 1854] def
end
/Metrics 5 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s176 1536 def
end
/CharProcs 5 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s176 {
128 1214 m
128 1290.67 155.17 1356 209.5 1410 c
263.83 1464 329 1491 405 1491 c
482.33 1491 548 1464 602 1410 c
656 1356 683 1290.67 683 1214 c
683 1137.33 655.83 1071.83 601.5 1017.5 c
547.17 963.17 481.67 936 405 936 c
329 936 263.83 963 209.5 1017 c
155.17 1071 128 1136.67 128 1214 c
closepath 237 1214 m
237 1167.33 253.5 1127.5 286.5 1094.5 c
319.5 1061.5 359.33 1045 406 1045 c
452 1045 491.5 1061.5 524.5 1094.5 c
557.5 1127.5 574 1167.33 574 1214 c
574 1260.67 557.5 1300.5 524.5 1333.5 c
491.5 1366.5 452 1383 406 1383 c
359.33 1383 319.5 1366.5 286.5 1333.5 c
253.5 1300.5 237 1260.67 237 1214 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC4_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 771.85 590.88 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.891235 0.891231 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.269291 -0 0 -0.269291 0 662.995] concat
gs
575 1168 m
2770 1168 l
7 sw
1 sj
1 scap
st
634 1168 m
634 1185 l
st
692 1168 m
692 1185 l
st
751 1168 m
751 1185 l
st
809 1168 m
809 1185 l
st
926 1168 m
926 1185 l
st
985 1168 m
985 1185 l
st
1043 1168 m
1043 1185 l
st
1102 1168 m
1102 1185 l
st
1219 1168 m
1219 1185 l
st
1277 1168 m
1277 1185 l
st
1336 1168 m
1336 1185 l
st
1394 1168 m
1394 1185 l
st
1512 1168 m
1512 1185 l
st
1570 1168 m
1570 1185 l
st
1629 1168 m
1629 1185 l
st
1687 1168 m
1687 1185 l
st
1804 1168 m
1804 1185 l
st
1863 1168 m
1863 1185 l
st
1921 1168 m
1921 1185 l
st
1980 1168 m
1980 1185 l
st
2097 1168 m
2097 1185 l
st
2155 1168 m
2155 1185 l
st
2214 1168 m
2214 1185 l
st
2272 1168 m
2272 1185 l
st
2390 1168 m
2390 1185 l
st
2448 1168 m
2448 1185 l
st
2507 1168 m
2507 1185 l
st
2565 1168 m
2565 1185 l
st
2682 1168 m
2682 1185 l
st
2741 1168 m
2741 1185 l
st
575 1168 m
575 1202 l
st
868 1168 m
868 1202 l
st
1160 1168 m
1160 1202 l
st
1453 1168 m
1453 1202 l
st
1746 1168 m
1746 1202 l
st
2038 1168 m
2038 1202 l
st
2331 1168 m
2331 1202 l
st
2624 1168 m
2624 1202 l
st
575 2052 m
575 285 l
st
575 1964 m
558 1964 l
st
575 1787 m
558 1787 l
st
575 1610 m
558 1610 l
st
575 1434 m
558 1434 l
st
575 1257 m
558 1257 l
st
575 1080 m
558 1080 l
st
575 903 m
558 903 l
st
575 727 m
558 727 l
st
575 550 m
558 550 l
st
575 373 m
558 373 l
st
575 2052 m
541 2052 l
st
575 1875 m
541 1875 l
st
575 1699 m
541 1699 l
st
575 1522 m
541 1522 l
st
575 1345 m
541 1345 l
st
575 1169 m
541 1169 l
st
575 992 m
541 992 l
st
575 815 m
541 815 l
st
575 638 m
541 638 l
st
575 462 m
541 462 l
st
575 285 m
541 285 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 576 -1255 m
(1.6)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 869 -1255 m
(1.8)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1161 -1255 m
(2.0)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1454 -1255 m
(2.2)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1747 -1255 m
(2.4)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2039 -1255 m
(2.6)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2332 -1255 m
(2.8)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2625 -1255 m
(3.0)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 366 -2075 m
(-100)[25 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 408 -1898 m
(-80)[25 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 408 -1722 m
(-60)[25 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 408 -1545 m
(-40)[25 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 408 -1368 m
(-20)[25 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 475 -1192 m
(0)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 433 -1015 m
(20)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 433 -838 m
(40)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 433 -661 m
(60)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 433 -485 m
(80)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 391 -308 m
(100)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 575 285 2196 1768 np rectpath
/eocl cland
np exec
800 1872 m
800 1872 m
813 1871 l
826 1869 l
839 1868 l
852 1866 l
865 1865 l
878 1863 l
891 1861 l
904 1859 l
917 1857 l
930 1855 l
943 1853 l
956 1851 l
969 1848 l
982 1845 l
995 1842 l
1008 1839 l
1021 1835 l
1034 1832 l
1047 1828 l
1060 1823 l
1073 1819 l
1086 1814 l
1099 1808 l
1111 1803 l
1124 1797 l
1137 1791 l
1150 1784 l
1163 1777 l
1176 1769 l
1189 1761 l
1202 1753 l
1215 1744 l
1228 1735 l
1241 1725 l
1254 1715 l
1267 1705 l
1280 1694 l
1291 1684 l
1304 1672 l
1317 1659 l
1330 1645 l
1343 1630 l
1356 1613 l
1369 1595 l
1382 1575 l
1393 1556 l
1406 1531 l
1419 1505 l
1432 1477 l
1445 1448 l
1454 1427 l
1467 1398 l
1480 1367 l
1493 1332 l
1500 1311 l
1513 1267 l
1526 1221 l
1539 1176 l
1541 1169 l
1554 1128 l
1567 1090 l
1580 1052 l
1593 1013 l
1606 974 l
1619 935 l
1629 907 l
1642 873 l
1655 842 l
1668 815 l
1681 790 l
1694 767 l
1707 747 l
1720 729 l
1733 712 l
1746 697 l
1759 684 l
1772 672 l
1785 661 l
1798 651 l
1811 641 l
1814 639 l
1827 630 l
1840 622 l
1853 614 l
1866 607 l
1879 600 l
1892 593 l
1905 587 l
1918 581 l
1931 575 l
1944 570 l
1957 565 l
1970 560 l
1983 556 l
1996 552 l
2009 548 l
2022 544 l
2035 540 l
2048 536 l
2061 533 l
2074 530 l
2087 527 l
2100 524 l
2113 521 l
2126 518 l
2139 515 l
2152 512 l
2165 510 l
2178 508 l
2191 505 l
2204 503 l
2217 501 l
2230 499 l
2243 497 l
2256 495 l
2269 493 l
2282 491 l
2295 490 l
2308 488 l
2321 486 l
2334 485 l
2347 483 l
2360 482 l
2373 481 l
2386 479 l
2399 478 l
2412 477 l
2425 475 l
2438 474 l
2451 473 l
2464 472 l
2477 470 l
2490 469 l
2503 468 l
2504 468 l
3 sw
st
778 1850 m
822 1894 l
st
822 1850 m
778 1894 l
st
1089 1781 m
1133 1825 l
st
1133 1781 m
1089 1825 l
st
1269 1662 m
1313 1706 l
st
1313 1662 m
1269 1706 l
st
1371 1534 m
1415 1578 l
st
1415 1534 m
1371 1578 l
st
1432 1405 m
1476 1449 l
st
1476 1405 m
1432 1449 l
st
1478 1289 m
1522 1333 l
st
1522 1289 m
1478 1333 l
st
1519 1147 m
1563 1191 l
st
1563 1147 m
1519 1191 l
st
1558 1030 m
1602 1074 l
st
1602 1030 m
1558 1074 l
st
1607 885 m
1651 929 l
st
1651 885 m
1607 929 l
st
1672 745 m
1716 789 l
st
1716 745 m
1672 789 l
st
1792 617 m
1836 661 l
st
1836 617 m
1792 661 l
st
2013 518 m
2057 562 l
st
2057 518 m
2013 562 l
st
2482 446 m
2526 490 l
st
2526 446 m
2482 490 l
st
gr
gs
pathproc 575 285 2196 1768 np rectpath
/eocl cland
np exec
gr
2360 91 m
2637 91 l
2637 217 l
2360 217 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
st
gs
gs
gr
gs
gs
2372 159 m
2560 159 l
st
gr
2445 138 m
2487 180 l
st
2487 138 m
2445 180 l
st
gr
1 -1 sc
/MC1_Arial 84 self 2560 -187 m
( )[23 ] xs
1 -1 sc
1 -1 sc
/MC2_Symbol 84 self 2583 -187 m
/s61542 43 xgls
1 -1 sc
gr
gs
gs
1 -1 sc
328 -1252 tr
90 ro
/MC3_Symbol 91 self 0 0 m
/s61542 47 xgls
1 -1 sc
gr
gs
1 -1 sc
328 -1205 tr
90 ro
/MC4_Arial 91 self 0 0 m
( \(\260\))[25 30 36 30 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC1_Arial 91 self 1431 -2080 m
(f \(kHz\))[26 25 30 46 66 44 30 ] xs
1 -1 sc
gr
569 373 m
572 373 l
st
585 373 m
588 373 l
st
601 373 m
604 373 l
st
617 373 m
620 373 l
st
633 373 m
636 373 l
st
649 373 m
652 373 l
st
665 373 m
668 373 l
st
681 373 m
684 373 l
st
697 373 m
700 373 l
st
713 373 m
716 373 l
st
729 373 m
732 373 l
st
745 373 m
748 373 l
st
761 373 m
764 373 l
st
777 373 m
780 373 l
st
793 373 m
796 373 l
st
809 373 m
812 373 l
st
825 373 m
828 373 l
st
841 373 m
844 373 l
st
857 373 m
860 373 l
st
873 373 m
876 373 l
st
889 373 m
892 373 l
st
905 373 m
908 373 l
st
921 373 m
924 373 l
st
937 373 m
940 373 l
st
953 373 m
956 373 l
st
969 373 m
972 373 l
st
985 373 m
988 373 l
st
1001 373 m
1004 373 l
st
1017 373 m
1020 373 l
st
1033 373 m
1036 373 l
st
1049 373 m
1052 373 l
st
1065 373 m
1068 373 l
st
1081 373 m
1084 373 l
st
1097 373 m
1100 373 l
st
1113 373 m
1116 373 l
st
1129 373 m
1132 373 l
st
1145 373 m
1148 373 l
st
1161 373 m
1164 373 l
st
1177 373 m
1180 373 l
st
1193 373 m
1196 373 l
st
1209 373 m
1212 373 l
st
1225 373 m
1228 373 l
st
1241 373 m
1244 373 l
st
1257 373 m
1260 373 l
st
1273 373 m
1276 373 l
st
1289 373 m
1292 373 l
st
1305 373 m
1308 373 l
st
1321 373 m
1324 373 l
st
1337 373 m
1340 373 l
st
1353 373 m
1356 373 l
st
1369 373 m
1372 373 l
st
1385 373 m
1388 373 l
st
1401 373 m
1404 373 l
st
1417 373 m
1420 373 l
st
1433 373 m
1436 373 l
st
1449 373 m
1452 373 l
st
1465 373 m
1468 373 l
st
1481 373 m
1484 373 l
st
1497 373 m
1500 373 l
st
1513 373 m
1516 373 l
st
1529 373 m
1532 373 l
st
1545 373 m
1548 373 l
st
1561 373 m
1564 373 l
st
1577 373 m
1580 373 l
st
1593 373 m
1596 373 l
st
1609 373 m
1612 373 l
st
1625 373 m
1628 373 l
st
1641 373 m
1644 373 l
st
1657 373 m
1660 373 l
st
1673 373 m
1676 373 l
st
1689 373 m
1692 373 l
st
1705 373 m
1708 373 l
st
1721 373 m
1724 373 l
st
1737 373 m
1740 373 l
st
1753 373 m
1756 373 l
st
1769 373 m
1772 373 l
st
1785 373 m
1788 373 l
st
1801 373 m
1804 373 l
st
1817 373 m
1820 373 l
st
1833 373 m
1836 373 l
st
1849 373 m
1852 373 l
st
1865 373 m
1868 373 l
st
1881 373 m
1884 373 l
st
1897 373 m
1900 373 l
st
1913 373 m
1916 373 l
st
1929 373 m
1932 373 l
st
1945 373 m
1948 373 l
st
1961 373 m
1964 373 l
st
1977 373 m
1980 373 l
st
1993 373 m
1996 373 l
st
2009 373 m
2012 373 l
st
2025 373 m
2028 373 l
st
2041 373 m
2044 373 l
st
2057 373 m
2060 373 l
st
2073 373 m
2076 373 l
st
2089 373 m
2092 373 l
st
2105 373 m
2108 373 l
st
2121 373 m
2124 373 l
st
2137 373 m
2140 373 l
st
2153 373 m
2156 373 l
st
2169 373 m
2172 373 l
st
2185 373 m
2188 373 l
st
2201 373 m
2204 373 l
st
2217 373 m
2220 373 l
st
2233 373 m
2236 373 l
st
2249 373 m
2252 373 l
st
2265 373 m
2268 373 l
st
2281 373 m
2284 373 l
st
2297 373 m
2300 373 l
st
2313 373 m
2316 373 l
st
2329 373 m
2332 373 l
st
2345 373 m
2348 373 l
st
2361 373 m
2364 373 l
st
2377 373 m
2380 373 l
st
2393 373 m
2396 373 l
st
2409 373 m
2412 373 l
st
2425 373 m
2428 373 l
st
2441 373 m
2444 373 l
st
2457 373 m
2460 373 l
st
2473 373 m
2476 373 l
st
2489 373 m
2492 373 l
st
2505 373 m
2508 373 l
st
2521 373 m
2524 373 l
st
2537 373 m
2540 373 l
st
2553 373 m
2556 373 l
st
2569 373 m
2572 373 l
st
2585 373 m
2588 373 l
st
2601 373 m
2604 373 l
st
2617 373 m
2620 373 l
st
2633 373 m
2636 373 l
st
2649 373 m
2652 373 l
st
2665 373 m
2668 373 l
st
2681 373 m
2684 373 l
st
2697 373 m
2700 373 l
st
2713 373 m
2716 373 l
st
2729 373 m
2732 373 l
st
569 1961 m
572 1961 l
st
585 1961 m
588 1961 l
st
601 1961 m
604 1961 l
st
617 1961 m
620 1961 l
st
633 1961 m
636 1961 l
st
649 1961 m
652 1961 l
st
665 1961 m
668 1961 l
st
681 1961 m
684 1961 l
st
697 1961 m
700 1961 l
st
713 1961 m
716 1961 l
st
729 1961 m
732 1961 l
st
745 1961 m
748 1961 l
st
761 1961 m
764 1961 l
st
777 1961 m
780 1961 l
st
793 1961 m
796 1961 l
st
809 1961 m
812 1961 l
st
825 1961 m
828 1961 l
st
841 1961 m
844 1961 l
st
857 1961 m
860 1961 l
st
873 1961 m
876 1961 l
st
889 1961 m
892 1961 l
st
905 1961 m
908 1961 l
st
921 1961 m
924 1961 l
st
937 1961 m
940 1961 l
st
953 1961 m
956 1961 l
st
969 1961 m
972 1961 l
st
985 1961 m
988 1961 l
st
1001 1961 m
1004 1961 l
st
1017 1961 m
1020 1961 l
st
1033 1961 m
1036 1961 l
st
1049 1961 m
1052 1961 l
st
1065 1961 m
1068 1961 l
st
1081 1961 m
1084 1961 l
st
1097 1961 m
1100 1961 l
st
1113 1961 m
1116 1961 l
st
1129 1961 m
1132 1961 l
st
1145 1961 m
1148 1961 l
st
1161 1961 m
1164 1961 l
st
1177 1961 m
1180 1961 l
st
1193 1961 m
1196 1961 l
st
1209 1961 m
1212 1961 l
st
1225 1961 m
1228 1961 l
st
1241 1961 m
1244 1961 l
st
1257 1961 m
1260 1961 l
st
1273 1961 m
1276 1961 l
st
1289 1961 m
1292 1961 l
st
1305 1961 m
1308 1961 l
st
1321 1961 m
1324 1961 l
st
1337 1961 m
1340 1961 l
st
1353 1961 m
1356 1961 l
st
1369 1961 m
1372 1961 l
st
1385 1961 m
1388 1961 l
st
1401 1961 m
1404 1961 l
st
1417 1961 m
1420 1961 l
st
1433 1961 m
1436 1961 l
st
1449 1961 m
1452 1961 l
st
1465 1961 m
1468 1961 l
st
1481 1961 m
1484 1961 l
st
1497 1961 m
1500 1961 l
st
1513 1961 m
1516 1961 l
st
1529 1961 m
1532 1961 l
st
1545 1961 m
1548 1961 l
st
1561 1961 m
1564 1961 l
st
1577 1961 m
1580 1961 l
st
1593 1961 m
1596 1961 l
st
1609 1961 m
1612 1961 l
st
1625 1961 m
1628 1961 l
st
1641 1961 m
1644 1961 l
st
1657 1961 m
1660 1961 l
st
1673 1961 m
1676 1961 l
st
1689 1961 m
1692 1961 l
st
1705 1961 m
1708 1961 l
st
1721 1961 m
1724 1961 l
st
1737 1961 m
1740 1961 l
st
1753 1961 m
1756 1961 l
st
1769 1961 m
1772 1961 l
st
1785 1961 m
1788 1961 l
st
1801 1961 m
1804 1961 l
st
1817 1961 m
1820 1961 l
st
1833 1961 m
1836 1961 l
st
1849 1961 m
1852 1961 l
st
1865 1961 m
1868 1961 l
st
1881 1961 m
1884 1961 l
st
1897 1961 m
1900 1961 l
st
1913 1961 m
1916 1961 l
st
1929 1961 m
1932 1961 l
st
1945 1961 m
1948 1961 l
st
1961 1961 m
1964 1961 l
st
1977 1961 m
1980 1961 l
st
1993 1961 m
1996 1961 l
st
2009 1961 m
2012 1961 l
st
2025 1961 m
2028 1961 l
st
2041 1961 m
2044 1961 l
st
2057 1961 m
2060 1961 l
st
2073 1961 m
2076 1961 l
st
2089 1961 m
2092 1961 l
st
2105 1961 m
2108 1961 l
st
2121 1961 m
2124 1961 l
st
2137 1961 m
2140 1961 l
st
2153 1961 m
2156 1961 l
st
2169 1961 m
2172 1961 l
st
2185 1961 m
2188 1961 l
st
2201 1961 m
2204 1961 l
st
2217 1961 m
2220 1961 l
st
2233 1961 m
2236 1961 l
st
2249 1961 m
2252 1961 l
st
2265 1961 m
2268 1961 l
st
2281 1961 m
2284 1961 l
st
2297 1961 m
2300 1961 l
st
2313 1961 m
2316 1961 l
st
2329 1961 m
2332 1961 l
st
2345 1961 m
2348 1961 l
st
2361 1961 m
2364 1961 l
st
2377 1961 m
2380 1961 l
st
2393 1961 m
2396 1961 l
st
2409 1961 m
2412 1961 l
st
2425 1961 m
2428 1961 l
st
2441 1961 m
2444 1961 l
st
2457 1961 m
2460 1961 l
st
2473 1961 m
2476 1961 l
st
2489 1961 m
2492 1961 l
st
2505 1961 m
2508 1961 l
st
2521 1961 m
2524 1961 l
st
2537 1961 m
2540 1961 l
st
2553 1961 m
2556 1961 l
st
2569 1961 m
2572 1961 l
st
2585 1961 m
2588 1961 l
st
2601 1961 m
2604 1961 l
st
2617 1961 m
2620 1961 l
st
2633 1961 m
2636 1961 l
st
2649 1961 m
2652 1961 l
st
2665 1961 m
2668 1961 l
st
2681 1961 m
2684 1961 l
st
2697 1961 m
2700 1961 l
st
2713 1961 m
2716 1961 l
st
gr
Save0 restore end
showpage
%%EOF
